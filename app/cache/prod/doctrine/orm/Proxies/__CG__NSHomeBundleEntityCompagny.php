<?php

namespace Proxies\__CG__\NS\HomeBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Compagny extends \NS\HomeBundle\Entity\Compagny implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setContactFirstname($contactFirstname)
    {
        $this->__load();
        return parent::setContactFirstname($contactFirstname);
    }

    public function getContactFirstname()
    {
        $this->__load();
        return parent::getContactFirstname();
    }

    public function setContactLastname($contactLastname)
    {
        $this->__load();
        return parent::setContactLastname($contactLastname);
    }

    public function getContactLastname()
    {
        $this->__load();
        return parent::getContactLastname();
    }

    public function setContactEmail($contactEmail)
    {
        $this->__load();
        return parent::setContactEmail($contactEmail);
    }

    public function getContactEmail()
    {
        $this->__load();
        return parent::getContactEmail();
    }

    public function setContactPassword($contactPassword)
    {
        $this->__load();
        return parent::setContactPassword($contactPassword);
    }

    public function getContactPassword()
    {
        $this->__load();
        return parent::getContactPassword();
    }

    public function setCompagnyPhone($compagnyPhone)
    {
        $this->__load();
        return parent::setCompagnyPhone($compagnyPhone);
    }

    public function getCompagnyPhone()
    {
        $this->__load();
        return parent::getCompagnyPhone();
    }

    public function setCompagnyDescription($compagnyDescription)
    {
        $this->__load();
        return parent::setCompagnyDescription($compagnyDescription);
    }

    public function getCompagnyDescription()
    {
        $this->__load();
        return parent::getCompagnyDescription();
    }

    public function setCompagnyLogo($compagnyLogo)
    {
        $this->__load();
        return parent::setCompagnyLogo($compagnyLogo);
    }

    public function getCompagnyLogo()
    {
        $this->__load();
        return parent::getCompagnyLogo();
    }

    public function setCompagnySize($compagnySize)
    {
        $this->__load();
        return parent::setCompagnySize($compagnySize);
    }

    public function getCompagnySize()
    {
        $this->__load();
        return parent::getCompagnySize();
    }

    public function setCompagnyIndustry($compagnyIndustry)
    {
        $this->__load();
        return parent::setCompagnyIndustry($compagnyIndustry);
    }

    public function getCompagnyIndustry()
    {
        $this->__load();
        return parent::getCompagnyIndustry();
    }

    public function setCompagnyRegion($compagnyRegion)
    {
        $this->__load();
        return parent::setCompagnyRegion($compagnyRegion);
    }

    public function getCompagnyRegion()
    {
        $this->__load();
        return parent::getCompagnyRegion();
    }

    public function setCompagnyCountry($compagnyCountry)
    {
        $this->__load();
        return parent::setCompagnyCountry($compagnyCountry);
    }

    public function getCompagnyCountry()
    {
        $this->__load();
        return parent::getCompagnyCountry();
    }

    public function setCompagnyAddress($compagnyAddress)
    {
        $this->__load();
        return parent::setCompagnyAddress($compagnyAddress);
    }

    public function getCompagnyAddress()
    {
        $this->__load();
        return parent::getCompagnyAddress();
    }

    public function setCreatedDate($createdDate)
    {
        $this->__load();
        return parent::setCreatedDate($createdDate);
    }

    public function getCreatedDate()
    {
        $this->__load();
        return parent::getCreatedDate();
    }

    public function setUpdatedDate($updatedDate)
    {
        $this->__load();
        return parent::setUpdatedDate($updatedDate);
    }

    public function getUpdatedDate()
    {
        $this->__load();
        return parent::getUpdatedDate();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'contact_firstname', 'contact_lastname', 'contact_email', 'contact_password', 'compagny_phone', 'compagny_description', 'compagny_logo', 'compagny_size', 'compagny_industry', 'compagny_region', 'compagny_country', 'compagny_address', 'created_date', 'updated_date');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}